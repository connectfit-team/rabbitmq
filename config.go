package rabbitmq

import "time"

// ClientConfig represents the configuration of a client instance.
type ClientConfig struct {
	ConnectionConfig ConnectionConfig
	ChannelConfig    ChannelConfig
	QueueConfig      QueueConfig
	ConsumerConfig   ConsumerConfig
	PublishConfig    PublishConfig
}

// ConnectionConfig contains all the configurable parameters used by a client instance
// to connect to a RabbitMQ server.
type ConnectionConfig struct {
	URL         string
	Username    string
	Password    string
	Host        string
	Port        string
	VirtualHost string
	RetryDelay  time.Duration
	Timeout     time.Duration
}

const (
	// DefaultConnectionTimeout is the default duration the client will wait until a successful connection.
	DefaultConnectionTimeout = time.Minute * 1
	// DefaultConnectionRetryDelay is the default delay between each connection attempt.
	DefaultConnectionRetryDelay = time.Second * 5
)

// DefaultConnectionConfig is the default configuration used by the client to connect
// to the server.
var DefaultConnectionConfig = ConnectionConfig{
	Username:    "guest",
	Password:    "guest",
	Host:        "localhost",
	Port:        "5672",
	VirtualHost: "",
	RetryDelay:  DefaultConnectionRetryDelay,
	Timeout:     DefaultConnectionTimeout,
}

// ChannelConfig contains all the configurable parameters used by a client instance
// to initialize a RabbitMQ channel.
type ChannelConfig struct {
	PrefetchCount            int
	PrefetchSize             int
	Global                   bool
	Confirm                  bool
	InitializationRetryDelay time.Duration
}

const (
	// DefaultPrefetchCount is the default number of messages the server will be able to send to your consumer
	// before receiving acknowledgment.
	DefaultPrefetchCount = 1
	// DefaultChannelInitializationRetryDelay is the default delay between each channel initialization attempt.
	DefaultChannelInitializationRetryDelay = time.Second * 5
)

// DefaultChannel is the default configuration used by a client to initialize
// a RabbitMQ channel.
var DefaultChannelConfig = ChannelConfig{
	PrefetchCount:            DefaultPrefetchCount,
	PrefetchSize:             0,
	Global:                   false,
	Confirm:                  false,
	InitializationRetryDelay: DefaultChannelInitializationRetryDelay,
}

// PublishConfig contains all the configurable parameters used by a client instance
// to publish messages.
type PublishConfig struct {
	Exchange   string
	Mandatory  bool
	Immediate  bool
	RetryDelay time.Duration
	Timeout    time.Duration
}

const (
	// DefaultPublishRetryDelay is the default delay between each attempt to publish
	// a RabbitMQ message.
	DefaultPublishRetryDelay = time.Second * 5
	// DefaultPublishTimeout is the default duration the client will wait until the server
	// confirms to the client the message a successfully been published.
	DefaultPublishTimeout = time.Second * 20
)

// DefaultPublishConfig is the default configuration used by a client instance to publish messages.
var DefaultPublishConfig = PublishConfig{
	Exchange:   "", // Default exchange
	Mandatory:  false,
	Immediate:  false,
	RetryDelay: DefaultPublishRetryDelay,
	Timeout:    DefaultPublishTimeout,
}

// ConsumerConfig contains all the configurable parameters used by a client instance
// to consume messages.
type ConsumerConfig struct {
	Name                     string
	AutoAck                  bool
	IsExclusive              bool
	NoWait                   bool
	NoLocal                  bool
	InitializationRetryDelay time.Duration
}

const (
	// DefaultConsumerInitializationRetryDelay is the delay between each consumer initialization attempt.
	DefaultConsumerInitializationRetryDelay = time.Second * 5
)

// DefaultConsumerConfig is the default configuration used by a client instance to consume messages.
var DefaultConsumerConfig = ConsumerConfig{
	Name:                     "", // Automatically generated by RabbitMQ
	AutoAck:                  false,
	IsExclusive:              false,
	NoWait:                   false,
	NoLocal:                  false,
	InitializationRetryDelay: DefaultConsumerInitializationRetryDelay,
}

// ConsumerConfig contains all the configurable parameters used by a client instance to declare a
// queue.
type QueueConfig struct {
	Name        string
	IsDurable   bool
	IsExclusive bool
	AutoDelete  bool
	NoWait      bool
}

// DefaultConsumerConfig is the default configuration used by a client instance to declare queues.
var DefaultQueueConfig = QueueConfig{
	Name:        "", // Automatically generated by RabbitMQ
	IsDurable:   true,
	IsExclusive: false,
	AutoDelete:  false,
	NoWait:      false,
}
